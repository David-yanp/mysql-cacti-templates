#summary Cacti templates and scripts for graphing MySQL

This page gives installation instructions specific to the MySQL graph templates, shows examples of graphs in the MySQL template collection, and shows what they do.  You might want to look at http://dev.mysql.com/doc/refman/5.1/en/server-status-variables.html to learn the meaning of the status variables contained in the graphs.

<wiki:toc max_depth="1" />

= Installation Notes =

The MySQL templates work by executing a PHP script that gathers information from MySQL servers and returns it to Cacti.  The script makes an ordinary MySQL connection to gather its input.

It is highly recommended that you use the same MySQL username and password for all servers you want to graph, to ease the installation and configuration.  If you don't, you will need to follow the instructions in InstallingTemplates and CustomizingTemplates to accommodate your installation.

The script requires that you be able to connect to MySQL from your Cacti server.  You can test this with the mysql command-line program.  Debugging MySQL connection problems is beyond the scope of this documentation; refer to the MySQL manual if you have trouble.

To install,

  # Create a MySQL user with the SUPER and PROCESS privileges on each server you want to monitor.  Assuming you use "cacti" and "s3cret" as your username and password, execute the following command on each server: `GRANT SUPER, PROCESS ON *.* TO 'cacti'@'%' IDENTIFIED BY "s3cret";`
    # If you want to monitor replication with mk-heartbeat from the Maatkit toolkit (recommended), you must grant SELECT on the heartbeat table also.  Assuming the mk-heartbeat table is maatkit.heartbeat, execute `GRANT SELECT ON maatkit.heartbeat TO 'cacti'@'%';`
  # Copy ss_get_mysql_stats.php into your Cacti installation's scripts/ directory.
  # All other steps are the same as mentioned in InstallingTemplates.

If you want to specify a different MySQL port for various servers, see http://code.google.com/p/mysql-cacti-templates/wiki/CustomizingTemplates#Accept_Input_in_Each_Data_Source

= InnoDB Buffer Pool Activity =

This graph shows activity inside the buffer pool: pages created, read, and written.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_016.png

= InnoDB Buffer Pool Status =

This graph shows the current status of the InnoDB buffer pool: the size, free pages, used (database) pages, and dirty (modified) pages.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_022.png

= InnoDB Insert Buffer =

This graph shows information about InnoDB's insert buffer.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_012.png

= InnoDB I/O Activity =

This graph shows InnoDB's I/O activity.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_003.png

= InnoDB I/O Pending =

This graph shows InnoDB's pending I/O operations.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_005.png

= InnoDB Log Activity =

This graph shows InnoDB log activity: the log buffer size, bytes written, flushed, and unflushed.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_024.png

= InnoDB Row Operations =

This graph shows row operations InnoDB has performed.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_002.png

= InnoDB Semaphores =

This graph shows information on InnoDB semaphore activity: the number of spin rounds, spin waits, and OS waits.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_017.png

= InnoDB Transaction Activity =

This graph shows information about transactions within InnoDB.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_006.png

= MySQL Binary/Relay logs =

This graph shows information about server binary and relay logs.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_013.png

= MySQL Command Counters =

This graph shows counters for various MySQL commands.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_010.png

= MySQL Connections =

This graph shows information about the connection parameters and counters inside MySQL: connections permitted, connections used, connections aborted, clients aborted, current connections, and connections created.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_020.png

= MySQL Files and Tables =

This graph shows status of MySQL's table cache and file handles.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_004.png

= MySQL MyISAM Indexes =

This graph shows information about how many logical and physical reads and writes took place to MyISAM indexes.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_021.png

= MySQL Network Traffic =

This graph shows network traffic to and from the MySQL Server, in bytes.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_023.png

= MySQL Processlist =

The MySQL Processlist shows the number (count) of queries from SHOW PROCESSLIST in given statuses.  Some of the statuses are lumped together into the "other" category.

http://sites.google.com/site/bettercactitemplates/Home/MySQL_Processlist.png

= MySQL Query Cache =

This graph shows information about the query cache inside MySQL.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_014.png

= MySQL Query Cache Memory =

This graph shows information on the query cache's memory usage: total size, free memory, total blocks and free blocks.  Blocks are not of a uniform size, despite the name.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_026.png

= MySQL Replication Status =

This graph displays the status of the replication thread.  There are two ways to measure the replication delay:

  # By looking at SHOW SLAVE STATUS's Seconds_behind_master column, which is shown as Secs Behind Master
  # By looking at a heartbeat table such as those supported by [http://www.maatkit.org/doc/mk-heartbeat.html mk-heartbeat].  You must configure the ss_get_mysql_stats.php file to do this.  Examine the comments in the header of the file (TODO: get that documentation online.)

When replication is running, there is an AREA of the same size as the replication delay, colored green.  When it's stopped, there's an AREA of the same size as the replication delay, colored red.  What this means is that you'll see a graph of replication delay, colored in with the appropriate color (green or red) to indicate whether replication was stopped at that moment.  If replication isn't delayed, you won't see any green or red.  If you're using Seconds_behind_master instead of mk-heartbeat to measure delay, it's impossible to measure delay when the slave is stopped, so you won't see any red.  This is one of the many reasons Seconds_behind_master from SHOW SLAVE STATUS is not terribly useful.

The graph also shows open temporary tables and retried transactions.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_015.png

= MySQL Select Types =

This graph shows information on how many of each type of select the MySQL server has performed: full join, full range join, range, range check, and scan.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_019.png

= MySQL Sorts =

This graph shows information about MySQL sort operations.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_007.png

= MySQL Table Locks =

This graph shows information about table-level lock operations inside MySQL.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_011.png

= MySQL Temporary Objects =

This graph shows information about temporary objects created by the MySQL server: temporary tables, temporary files, and temporary tables created on disk instead of in memory.

http://sites.google.com/site/bettercactitemplates/Home/graph_image_025.png